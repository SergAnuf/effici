# src/analyze_results.py
import os
import sqlite3
import pandas as pd
from config import OUTPUT_DIR


def analyze_output():
    """
    Analyzes the EnergyPlus simulation output stored in an SQLite database.

    - Connects to the SQLite database generated by EnergyPlus.
    - Verifies the existence of required tables (`ReportData` and `ReportDataDictionary`).
    - Queries the database to extract annual energy consumption for electricity and natural gas.
    - Displays the results in the console.

    Raises:
        RuntimeError: If the required tables are missing from the database.
    """
    # Path to the SQLite output file
    sql_path = os.path.join(OUTPUT_DIR, "eplusout.sql")

    # Connect to the SQLite database
    con = sqlite3.connect(sql_path)
    cur = con.cursor()

    # Check for the existence of required tables
    required_tables = {"ReportData", "ReportDataDictionary"}
    cur.execute("SELECT name FROM sqlite_master WHERE type='table';")
    existing_tables = {row[0] for row in cur.fetchall()}
    if not required_tables.issubset(existing_tables):
        raise RuntimeError(f"Missing required tables: {required_tables - existing_tables}")

    # Query to extract annual energy consumption for electricity and natural gas
    query = """
    SELECT rdd.Name, rd.Value
    FROM ReportData rd
    JOIN ReportDataDictionary rdd
    ON rd.ReportDataDictionaryIndex = rdd.ReportDataDictionaryIndex
    WHERE rdd.ReportingFrequency = 'Annual'
    AND rdd.Name IN ('Electricity:Facility', 'NaturalGas:Facility')
    """
    # Execute the query and load the results into a pandas DataFrame
    df = pd.read_sql_query(query, con)

    # Close the database connection
    con.close()

    # Print the results
    print("\nAnnual Energy Use (GJ):")
    print(df)

if __name__ == "__main__":
    """
    Main entry point of the script.

    - Calls the `analyze_output` function to process and display simulation results.
    """
    analyze_output()